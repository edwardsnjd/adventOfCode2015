#! /usr/bin/env -S nu --stdin

def main [] {
  ($in | split chars)
  | accumulate { |char, acc|
      let last = $acc | default [0] | last | default 0
      $last + (changeFor $char)
    }
  | enumerate
  | filter { $in.item == -1 }
  | first
  | get index
  | each { $in + 1 }
}

def changeFor [char] {
  match $char { '(' => 1, ')' => -1, }
}

# Accumulate all values according to the given reducer.
def accumulate [fn: closure] {
  reduce --fold [] { |elt, acc| $acc ++ (do $fn $elt $acc) }
}
